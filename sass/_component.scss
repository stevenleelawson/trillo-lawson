///////////////////////////////////////////////
// LOGO
.logo {
	height: 3.25rem;
	margin-left: 3rem;
}

///////////////////////////////////////////////
// SEARCH
.search {
	flex: 0 0 40%;

	// NESTED FLEX!
	display: flex;
	align-items: center;
	justify-content: center;

	&__input {
		// input elem DOES NOT automatically inherit based on the global document for either of these:
		font-family: inherit;
		font-size: inherit;
		color: inherit;
		background-color: var(--color-grey-light-2);
		border: none;
		padding: .7rem 2rem;
		border-radius: 110px;
		width: 90%;
		transition: all .2s;

		// this way btn will move on top of the input
		margin-right: -3.5rem;

		&:focus {
			outline: none;
			width: 100%;
			background-color: var(--color-grey-light-3);
		}

		// chrome and safari browsers
		&::-webkit-input-placeholder {
			font-weight: 100;
			color: var(--color-grey-light-4);
		}
	}

	// checkbox hack by selecting the adjacent elem (sibling) based on pseudo state
	&__input:focus + &__button {
		background-color: var(--color-grey-light-3);
	}

	&__button {
		border: none;
		background-color: var(--color-grey-light-2);

		&:focus {
			outline: none;
		}

		&:active {
			transform: translateY(2px);
		}
	}

	&__icon {
		height: 2rem;
		width: 2rem;

		// this declaration changes the actual SVG color
		fill: var(--color-grey-dark-3);
	}
}

///////////////////////////////////////////////
// USER NAVIGATION
.user-nav {

	// this over-rides the cross-axis centering we did in the .header class
	align-self: stretch;

	display: flex;
	align-items: center;

	// user nav AND all of the direct children
	& > * {
		padding: 0 2rem;
		cursor: pointer;
		height: 100%;

		display: flex;
		// aligns items along CROSS axis, which is usually vertically
		align-items: center;
	}

	& > *:hover {
		background-color: var(--color-grey-light-2);
	}

	&__icon-box {
		position: relative;
	}

	&__icon {
		height: 2.25rem;
		width: 2.25rem;
		color: var(--color-grey-dark-2);
	}

	&__notification {
		font-size: .8rem;
		height: 1.75rem;
		width: 1.75rem;
		background-color: var(--color-primary);
		border-radius: 50% ;
		color: #fff;
		position: absolute;
		top: 1.5rem;
		right: 1.1rem;

		//this is how I tried to center the little numbers in the notification bubbles AND I FUCKIN NAILED IT
		display: flex;
		justify-content: center;
		align-items: center;
		
	}

	&__user-photo {
		height: 3.75rem;
		width: 3.75rem;
		border-radius: 50%;
		margin-right: 1rem;
	}
}

///////////////////////////////////////////////
// SIDE NAVIGATION
.side-nav {
	font-size: 1.4rem;
	list-style: none;
	margin-top: 3.5rem;
	
	&__item {
		position: relative;

		// Trick to give all of the items a margin EXCEPT the last one. STandard. Classic, man
		&:not(:last-child) {
			margin-bottom: .5rem;
		}
	}

	// using ::before for cool thin pink line to the left of the nav list link items
	&__item::before {
		// always need to specify content or it's NOT going to work!!
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 3px;
		background-color: var(--color-primary);
		transform: scaleY(0);

		// this added properties are for the horizontal pink highlight animation on hover
		// NOTE how below multiple animations for different props can be animated
		transition: transform .2s,
					width .4s cubic-bezier(1,0, 0, 1) .2s,
					background-color .1s;
	}


	// THIS is so the pink line to the left only appears next to hovered item
	&__item:hover::before,
	&__item--active::before {
		// the line grows from the middle out because we are using scale in the Y direction 
		transform: scaleY(1);

		// this is for the highlight effect on hover horizontally
		width: 100%;
	}

	&__item:active::before {
		background-color: var(--color-primary-light);
	}
	&__link:link,
	&__link:visited {
		// !!!!! z-index ONLY works with the position set to anything other than default (you forgot to do that and couldn't figure out why the damn z-index wasn't working)
		position: relative;
		z-index: 2;
		color: var(--color-grey-light-1);
		text-decoration: none;
		text-transform: uppercase;
		display: block;

		// padding: top/bottom left/right;
		padding: 1.5rem 3rem;

		// two lines of code aligns the icons and nav list links. cool!!!
		display: flex;
		align-items: center;
	}

	&__link:hover {
		color: currentColor;
	}

	&__icon {
		// NOTE: usually size SVGs as SQUARES
		width: 1.75rem;
		height: 1.75rem;
		margin-right: 2rem;

		// currentColor is the current color being used or the PARENT (in this case, made --color-grey-light-1 as above ^^
		// and reminder, the fill property is used for svg color
		fill: currentColor;
	}
}

///////////////////////////////////////////////
// LEGAL

.legal {
	text-align: center;
	font-size: 1.2rem;
	color: var(--color-grey-light-4);
	padding: 2.5rem;
}